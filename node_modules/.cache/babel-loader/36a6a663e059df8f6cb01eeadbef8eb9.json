{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\binel\\\\OneDrive\\\\Desktop\\\\Test\\\\RoboExpo_testing\\\\src\\\\containers\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { setSearchField, requestRobots } from '../actions';\nimport MainPage from \"../co\"; // parameter state comes from index.js provider store state(rootReducers)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending\n  };\n}; // dispatch the DOM changes to call an action. note mapStateToProps returns object, mapDispatchToProps returns function\n// the function returns an object then uses connect to change the data from reducers.\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => dispatch(requestRobots())\n  };\n};\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(MainPage, { ...this.props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  }\n\n} // action done from mapDispatchToProps will channge state from mapStateToProps\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"names":["React","Component","connect","setSearchField","requestRobots","MainPage","mapStateToProps","state","searchField","searchRobots","robots","isPending","mapDispatchToProps","dispatch","onSearchChange","event","target","value","onRequestRobots","App","render","props"],"sources":["C:/Users/binel/OneDrive/Desktop/Test/RoboExpo_testing/src/containers/App.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { setSearchField, requestRobots } from '../actions';\r\n\r\nimport MainPage from \"../co\";\r\n\r\n// parameter state comes from index.js provider store state(rootReducers)\r\nconst mapStateToProps = state => {\r\n    return {\r\n        searchField: state.searchRobots.searchField,\r\n        robots: state.requestRobots.robots,\r\n        isPending: state.requestRobots.isPending\r\n    }\r\n}\r\n\r\n// dispatch the DOM changes to call an action. note mapStateToProps returns object, mapDispatchToProps returns function\r\n// the function returns an object then uses connect to change the data from reducers.\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n        onRequestRobots: () => dispatch(requestRobots())\r\n    }\r\n}\r\n\r\nclass App extends Component {\r\n    render () {\r\n        return <MainPage {...this.props}/>\r\n    }\r\n}\r\n\r\n// action done from mapDispatchToProps will channge state from mapStateToProps\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,YAA9C;AAEA,OAAOC,QAAP,MAAqB,OAArB,C,CAEA;;;;AACA,MAAMC,eAAe,GAAGC,KAAK,IAAI;EAC7B,OAAO;IACHC,WAAW,EAAED,KAAK,CAACE,YAAN,CAAmBD,WAD7B;IAEHE,MAAM,EAAEH,KAAK,CAACH,aAAN,CAAoBM,MAFzB;IAGHC,SAAS,EAAEJ,KAAK,CAACH,aAAN,CAAoBO;EAH5B,CAAP;AAKH,CAND,C,CAQA;AACA;;;AACA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;EACrC,OAAO;IACHC,cAAc,EAAGC,KAAD,IAAWF,QAAQ,CAACV,cAAc,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CADhC;IAEHC,eAAe,EAAE,MAAML,QAAQ,CAACT,aAAa,EAAd;EAF5B,CAAP;AAIH,CALD;;AAOA,MAAMe,GAAN,SAAkBlB,SAAlB,CAA4B;EACxBmB,MAAM,GAAI;IACN,oBAAO,QAAC,QAAD,OAAc,KAAKC;IAAnB;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;AAHuB,C,CAM5B;;;AACA,eAAenB,OAAO,CAACI,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CO,GAA7C,CAAf"},"metadata":{},"sourceType":"module"}